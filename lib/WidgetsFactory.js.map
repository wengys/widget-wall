{"version":3,"sources":["../src/WidgetsFactory.ts"],"names":["WidgetsFactory","widgetFactories","instanceConfig","widgetType","type","factory","util","firstOrNull","w","Error","instance","createInstance","createConfigStub"],"mappings":";;;;;;;AACA;;;;;;;;;;;;IAGaA,c;;;AAGT,0BAAYC,eAAZ,EAAiD;AAAA;;AAAA;;AAC7C,SAAKA,eAAL,GAAuBA,eAAvB;AACH;;;;2BAEaC,c,EAA8C;AACxD,UAAIC,aAAaD,eAAeE,IAAhC;AACA,UAAIC,UAAUC,KAAKC,WAAL,CAAiB,KAAKN,eAAtB,EAAsC,UAACO,CAAD;AAAA,eAAKA,EAAEJ,IAAF,IAAUD,UAAf;AAAA,OAAtC,CAAd;;AACA,UAAI,CAACE,OAAL,EAAc;AACV,cAAM,IAAII,KAAJ,CAAU,qBAAqBN,UAA/B,CAAN;AACH;;AACD,UAAIO,WAAWL,QAAQM,cAAR,EAAf;AACA,aAAOD,QAAP;AACH;;;+BAEiBP,U,EAAoBD,c,EAAiD;AACnF,UAAIG,UAAUC,KAAKC,WAAL,CAAiB,KAAKN,eAAtB,EAAsC,UAACO,CAAD;AAAA,eAAKA,EAAEJ,IAAF,IAAUD,UAAf;AAAA,OAAtC,CAAd;;AACA,UAAI,CAACE,OAAL,EAAc;AACV,cAAM,IAAII,KAAJ,CAAU,qBAAqBN,UAA/B,CAAN;AACH;;AACD,UAAIO,WAAWL,QAAQO,gBAAR,CAAyBV,cAAzB,CAAf;AACA,aAAOQ,QAAP;AACH","sourcesContent":["import { WidgetDefinition, WidgetInstance, WidgetConfigStub } from \"./WidgetInstance\";\r\nimport * as util from \"./util\"\r\nimport { WidgetConfig } from \"./WidgetConfig\";\r\n\r\nexport class WidgetsFactory {\r\n    private widgetFactories: WidgetDefinition[];\r\n\r\n    constructor(widgetFactories: WidgetDefinition[]) {\r\n        this.widgetFactories = widgetFactories;\r\n    }\r\n\r\n    public create(instanceConfig: WidgetConfig): WidgetInstance {\r\n        let widgetType = instanceConfig.type;\r\n        let factory = util.firstOrNull(this.widgetFactories,(w)=>w.type == widgetType)\r\n        if (!factory) {\r\n            throw new Error(\"unknown widget: \" + widgetType);\r\n        }\r\n        let instance = factory.createInstance();\r\n        return instance;\r\n    }\r\n\r\n    public createStub(widgetType: string, instanceConfig?: WidgetConfig): WidgetConfigStub {\r\n        let factory = util.firstOrNull(this.widgetFactories,(w)=>w.type == widgetType)        \r\n        if (!factory) {\r\n            throw new Error(\"unknown widget: \" + widgetType);\r\n        }\r\n        let instance = factory.createConfigStub(instanceConfig);\r\n        return instance\r\n    }\r\n}"],"file":"WidgetsFactory.js"}